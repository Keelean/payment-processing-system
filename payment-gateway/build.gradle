plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.keelean'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('cucumberVersion', "7.18.0")
	set('testcontainersVersion', "1.19.8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	swaggerCodegen 'org.openapitools:openapi-generator-cli:7.3.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.platform:junit-platform-suite'
	testImplementation 'org.junit.platform:junit-platform-engine'


	testImplementation 'io.cucumber:cucumber-java'
	testImplementation 'io.cucumber:cucumber-junit'
	testImplementation 'io.cucumber:cucumber-junit-platform-engine'
	testImplementation 'io.cucumber:cucumber-spring'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testImplementation 'io.projectreactor:reactor-test'
}

swaggerSources {
	def typeMappings = 'URI=URI'
	def importMappings = 'URI=java.net.URI'
	apigateway {
		def apiYaml = "${rootDir}/src/main/resources/api/paymentgateway.yaml"
		def configJson = "${rootDir}/src/main/resources/api/config.json"
		inputFile = file(apiYaml)
		def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")

		code {
			language = 'spring'
			configFile = file(configJson)
			rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings', typeMappings, '--import-mappings', importMappings] as List<String>
			components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
			//dependsOn validation
		}
	}
}

compileJava.dependsOn swaggerSources.apigateway.code
sourceSets.main.java.srcDir "${swaggerSources.apigateway.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.apigateway.code.outputDir}/src/main/resources"

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.cucumber:cucumber-bom:${cucumberVersion}"
		mavenBom "com.azure:azure-sdk-bom:${springcloudazure}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
